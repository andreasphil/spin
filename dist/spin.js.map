{
  "version": 3,
  "sources": ["../src/spin.js"],
  "sourcesContent": ["// Utils --------------------------------------------------\n\n/**\n * @param {TemplateStringsArray} strings\n * @param {unknown[]} values\n * @returns {Node}\n */\nfunction html(strings, ...values) {\n  const el = document.createElement(\"template\");\n  el.innerHTML = String.raw({ raw: strings }, ...values);\n  return el.content.cloneNode(true);\n}\n\n// Main ---------------------------------------------------\n\nexport class SpinBg extends HTMLElement {\n  /**\n   * Registers the component as a custom element. For compatibility, you can\n   * provide a tag name, otherwise the tag name will default to `spin-bg`.\n   *\n   * @param {string} [tag]\n   */\n  static define(tag = \"spin-bg\") {\n    if (!tag) throw new Error(\"Custom element must specify a tag name\");\n\n    customElements.define(tag, this);\n  }\n\n  constructor() {\n    super();\n\n    const root = this.attachShadow({ mode: \"closed\" });\n\n    const template = html`<style>\n        @keyframes spin {\n          100% {\n            --spin-angle: 360deg;\n          }\n        }\n\n        :host {\n          display: block;\n          overflow: hidden;\n          position: relative;\n          height: var(--spin-height, 100dvh);\n        }\n\n        :host([top]) spin-wheel {\n          top: calc(var(--spin-radius) * -1);\n        }\n\n        :host([bottom]) spin-wheel {\n          bottom: calc(var(--spin-radius) * -1);\n        }\n\n        spin-wheel {\n          --spin-radius: calc(100dvh / 2 + 250px);\n\n          animation: var(--spin-speed) spin linear infinite normal;\n          animation-delay: calc(var(--spin-speed) * var(--spin-animation-offset, 0) * -1);\n          aspect-ratio: 1;\n          border-radius: 100%;\n          height: calc((var(--spin-radius) * 2));\n          left: var(--spin-start-pos);\n          position: absolute;\n          translate: calc(sin(var(--spin-angle)) * var(--spin-travel, 25dvw)) 0;\n\n          background: radial-gradient(\n            circle closest-side,\n            color-mix(in oklch, var(--spin-color), transparent var(--spin-fade, 30%)) 0%,\n            transparent 100%\n          );\n\n          &:nth-of-type(1) {\n            --spin-color: oklch(0.82 0.17046 77.4296);\n            --spin-speed: 20s;\n            --spin-start-pos: calc(40dvw - var(--spin-radius));\n          }\n\n          &:nth-of-type(2) {\n            --spin-animation-offset: 0.5;\n            --spin-color: oklch(0.57 0.2195 11.33);\n            --spin-speed: 16s;\n            --spin-start-pos: calc(60dvw - var(--spin-radius));\n          }\n        }\n      </style>\n\n      <spin-wheel part=\"wheel wheel-1\"></spin-wheel>\n      <spin-wheel part=\"wheel wheel-2\"></spin-wheel>`;\n\n    // Using @property in CSS in shadow DOM doesn't work, so we need to do it\n    // manually, see https://stackoverflow.com/a/79037671\n    CSS.registerProperty({\n      name: \"--spin-angle\",\n      syntax: \"<angle>\",\n      inherits: false,\n      initialValue: \"0deg\",\n    });\n\n    root.appendChild(template);\n  }\n}\n"],
  "mappings": "AAOA,SAASA,EAAKC,KAAYC,EAAQ,CAChC,IAAMC,EAAK,SAAS,cAAc,UAAU,EAC5C,OAAAA,EAAG,UAAY,OAAO,IAAI,CAAE,IAAKF,CAAQ,EAAG,GAAGC,CAAM,EAC9CC,EAAG,QAAQ,UAAU,EAAI,CAClC,CAIO,IAAMC,EAAN,cAAqB,WAAY,CAOtC,OAAO,OAAOC,EAAM,UAAW,CAC7B,GAAI,CAACA,EAAK,MAAM,IAAI,MAAM,wCAAwC,EAElE,eAAe,OAAOA,EAAK,IAAI,CACjC,CAEA,aAAc,CACZ,MAAM,EAEN,IAAMC,EAAO,KAAK,aAAa,CAAE,KAAM,QAAS,CAAC,EAE3CC,EAAWP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDA4DjB,IAAI,iBAAiB,CACnB,KAAM,eACN,OAAQ,UACR,SAAU,GACV,aAAc,MAChB,CAAC,EAEDM,EAAK,YAAYC,CAAQ,CAC3B,CACF",
  "names": ["html", "strings", "values", "el", "SpinBg", "tag", "root", "template"]
}
